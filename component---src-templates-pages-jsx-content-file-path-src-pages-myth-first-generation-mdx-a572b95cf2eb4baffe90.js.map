{"version":3,"file":"component---src-templates-pages-jsx-content-file-path-src-pages-myth-first-generation-mdx-a572b95cf2eb4baffe90.js","mappings":"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","sources":["webpack://odyssey/./src/pages/myth/first-generation.mdx","webpack://odyssey/./src/templates/pages.jsx","webpack://odyssey/./src/content/data/first-generation.ts","webpack://odyssey/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {firstGenNodes, firstGenEdges} from \"../../content/data/first-generation\";\nimport {Map} from \"../../feature/Map\";\nfunction _createMdxContent(props) {\n  return React.createElement(\"div\", {\n    className: \"flex justify-center\"\n  }, React.createElement(Map, {\n    nodes: firstGenNodes,\n    edges: firstGenEdges\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/tatinacherednichenko/Documents/dev/odyssey/src/pages/myth/first-generation.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nconst PostsTemplate = ({data, children}) => {\n  return React.createElement(\"div\", {\n    className: \"\"\n  }, React.createElement(\"h1\", {\n    className: \"text-2xl text-center pb-8\"\n  }, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n};\nPostsTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostsTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx.frontmatter.title);\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","const animated = true;\nconst type = \"default\";\nconst baseNode = \"base\";\nconst labelNode = \"label\";\n\nexport const firstGenNodes = [\n  { id: \"h1\", data: { label: \"Хаос\" }, type: baseNode },\n  { id: \"he1\", data: { label: \"Эреб\", description: \"тьма\" }, type: baseNode },\n  { id: \"hn2\", data: { label: \"Никта\", description: \"ночь\" }, type: baseNode },\n  {\n    id: \"hg3\",\n    data: { label: \"Гея\", description: \"земля\", path: \"gaia\" },\n    type: baseNode,\n  },\n  {\n    id: \"ht4\",\n    data: { label: \"Тартар\", description: \"подземные глубины и пещеры\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgu0\",\n    data: { label: \"Уран\", description: \"небо\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgp0\",\n    data: { label: \"Понт\", description: \"море\" },\n    type: baseNode,\n  },\n  {\n    id: \"hen1\",\n    data: { label: \"Эреб + Никта\" },\n    type: labelNode,\n  },\n  {\n    id: \"heng1\",\n    data: { label: \"Гемера\", description: \"день\" },\n    type: baseNode,\n  },\n  {\n    id: \"hene1\",\n    data: { label: \"Эфир\", description: \"свет\" },\n    type: baseNode,\n  },\n  {\n    id: \"henge1\",\n    data: { label: \"Гемера + Эфир\" },\n    type: labelNode,\n  },\n  {\n    id: \"henhet1\",\n    data: { label: \"Таласса\", description: \"море\" },\n    type: baseNode,\n  },\n];\n\nexport const firstGenEdges = [\n  { id: \"eh1-he1\", source: \"h1\", target: \"he1\", type, animated },\n  { id: \"eh1-hn2\", source: \"h1\", target: \"hn2\", type, animated },\n  {\n    id: \"eh1-hg3\",\n    source: \"h1\",\n    target: \"hg3\",\n    type,\n    animated,\n  },\n  { id: \"eh1-ht4\", source: \"h1\", target: \"ht4\", type, animated },\n  {\n    id: \"ehg3-hgu0\",\n    source: \"hg3\",\n    target: \"hgu0\",\n    animated,\n    type,\n    label: \"Партеногенез\",\n  },\n  {\n    id: \"ehg3-hgp0\",\n    source: \"hg3\",\n    target: \"hgp0\",\n    animated,\n    type,\n  },\n  {\n    id: \"ehe1-hen1\",\n    source: \"he1\",\n    target: \"hen1\",\n    type,\n    animated,\n  },\n  {\n    id: \"ehn2-hen1\",\n    source: \"hn2\",\n    target: \"hen1\",\n    type,\n    animated,\n  },\n  {\n    id: \"ehen1-heng1\",\n    source: \"hen1\",\n    target: \"heng1\",\n    type,\n    animated,\n  },\n  {\n    id: \"ehen1-hene1\",\n    source: \"hen1\",\n    target: \"hene1\",\n    type,\n    animated,\n  },\n  {\n    id: \"eheng1-henge1\",\n    source: \"heng1\",\n    target: \"henge1\",\n    type,\n    animated,\n  },\n  {\n    id: \"ehene1-henge1\",\n    source: \"hene1\",\n    target: \"henge1\",\n    type,\n    animated,\n  },\n  {\n    id: \"ehenge1-henhet1\",\n    source: \"henge1\",\n    target: \"henhet1\",\n    type,\n    animated,\n  },\n];\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","React","className","Map","nodes","firstGenNodes","edges","firstGenEdges","wrapper","MDXLayout","Object","assign","_provideComponents","components","PostsTemplate","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","animated","type","baseNode","labelNode","id","label","description","path","source","target","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}