{"version":3,"file":"component---src-templates-pages-jsx-content-file-path-src-pages-myth-mdx-e09da05c1d7fb903b46b.js","mappings":"6JAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,GAAI,KAAM,iBAAkB,KAAM,KAAMG,EAAAA,cAAoBC,EAAAA,EAAK,CAChJC,MAAOC,EAAAA,gBACPC,MAAOC,EAAAA,kBAEX,CAKA,UAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOQ,EAAYP,EAAAA,cAAoBO,EAAWd,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,C,gICbA,MAAMe,EAAgBC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EACrC,OAAOT,EAAAA,cAAoB,MAAO,CAChCY,UAAW,IACVZ,EAAAA,cAAoB,KAAM,CAC3BY,UAAW,6BACVF,EAAKG,IAAIC,YAAYC,OAAQf,EAAAA,cAAoBgB,EAAAA,EAAa,KAAML,GAAU,EAGpE,SAASM,EAAiBxB,GACvC,OAAOO,EAAAA,cAAoBQ,EAAef,EAAOO,EAAAA,cAAoBkB,EAAAA,QAAqBzB,GAC5F,CACO,MAAM0B,EAAOC,IAAA,IAAC,KAACV,GAAKU,EAAA,OAAKpB,EAAAA,cAAoB,QAAS,KAAMU,EAAKG,IAAIC,YAAYC,MAAM,C,8ECf9F,MACMM,EAAW,OACXC,GAAW,EACXC,EAAO,SAEAC,EAAuB,CAClC,CACEC,GAAI,SACJf,KAAM,CAAEgB,MAAO,QACfH,KAAMF,GAER,CACEI,GAAI,SACJf,KAAM,CAAEgB,MAAO,UACfH,KAAMF,GAER,CACEI,GAAI,SACJf,KAAM,CAAEgB,MAAO,aACfH,KAAMF,GAER,CACEI,GAAI,SACJf,KAAM,CAAEgB,MAAO,QACfH,KAAMF,GAER,CACEI,GAAI,SACJf,KAAM,CAAEgB,MAAO,UACfH,KAAMF,GAER,CACEI,GAAI,SACJf,KAAM,CAAEgB,MAAO,OACfH,KAAMF,IAIGM,EAAuB,CAClC,CACEF,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,YAEF,CACEG,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,YAEF,CACEG,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,YAEF,CACEG,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,YAEF,CACEG,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,YAEF,CACEG,GAAI,eACJG,OAAQ,QACRC,OAAQ,SACRN,OACAD,Y,4FCpDJ,MAAMQ,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBjC,GAC/B,MAAMkC,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfhC,EACFA,EAAWkC,GAGb,IAAIA,KAAsBlC,EACnC,GACA,CAACkC,EAAmBlC,GAExB,CAWO,SAASiB,EAAYkB,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWnC,WACdmC,EAAWnC,WAAW+B,GACtBI,EAAWnC,YAAc+B,EAEfE,EAAiBE,EAAWnC,YAGvC,gBACLgC,EAAWM,SACX,CAACC,MAAOH,GACRD,EAAWvB,SAEf,C","sources":["webpack://odyssey/./src/pages/myth.mdx","webpack://odyssey/./src/templates/pages.jsx","webpack://odyssey/./src/content/data/gaia-uranus-girls.ts","webpack://odyssey/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {gaiaUranusNodes, gaiaUranusEdges} from \"../content/data/gaia-uranus-girls\";\nimport {Map} from \"../feature/Map\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Hello, world!\"), \"\\n\", \"\\n\", React.createElement(Map, {\n    nodes: gaiaUranusNodes,\n    edges: gaiaUranusEdges\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/tatinacherednichenko/Documents/dev/odyssey/src/pages/myth.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nconst PostsTemplate = ({data, children}) => {\n  return React.createElement(\"div\", {\n    className: \"\"\n  }, React.createElement(\"h1\", {\n    className: \"text-2xl text-center pb-8\"\n  }, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n};\nPostsTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostsTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx.frontmatter.title);\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","const labelNode = \"label\";\nconst baseNode = \"base\";\nconst animated = true;\nconst type = \"bezier\";\n\nexport const gaiaUranusGirlsNodes = [\n  {\n    id: \"hgupt1\",\n    data: { label: \"Тейя\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupf1\",\n    data: { label: \"Фемида\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupm1\",\n    data: { label: \"Мнемосина\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupf2\",\n    data: { label: \"Феба\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupt2\",\n    data: { label: \"Тефида\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupr1\",\n    data: { label: \"Рея\" },\n    type: baseNode,\n  },\n];\n\nexport const gaiaUranusGirlsEdges = [\n  {\n    id: \"hgup1-hgupt1\",\n    source: \"hgup1\",\n    target: \"hgupt1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupf1\",\n    source: \"hgup1\",\n    target: \"hgupf1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupm1\",\n    source: \"hgup1\",\n    target: \"hgupm1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupf2\",\n    source: \"hgup1\",\n    target: \"hgupf2\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupt2\",\n    source: \"hgup1\",\n    target: \"hgupt2\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupr1\",\n    source: \"hgup1\",\n    target: \"hgupr1\",\n    type,\n    animated,\n  },\n];\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","_provideComponents","components","React","Map","nodes","gaiaUranusNodes","edges","gaiaUranusEdges","wrapper","MDXLayout","PostsTemplate","_ref","data","children","className","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","baseNode","animated","type","gaiaUranusGirlsNodes","id","label","gaiaUranusGirlsEdges","source","target","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}