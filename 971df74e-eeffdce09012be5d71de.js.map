{"version":3,"file":"971df74e-eeffdce09012be5d71de.js","mappings":"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","sources":["webpack://odyssey/./node_modules/@reactflow/core/dist/esm/index.mjs"],"sourcesContent":["import React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (React.createElement(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest }, children));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (React.createElement(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\" },\n        React.createElement(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\" }, \"React Flow\")));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (React.createElement(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest },\n        labelShowBg && (React.createElement(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })),\n        React.createElement(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle }, label),\n        children));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }),\n        interactionWidth && (React.createElement(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })),\n        label && isNumeric(labelX) && isNumeric(labelY) ? (React.createElement(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x ?? defaultCenterX;\n        centerY = center.y ?? defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (React.createElement(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getNodesBounds = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n    return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n    console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n    return [x, y, zoom];\n};\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                const handle = handles.find((h) => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: handle?.x || pos.x,\n                        y: handle?.y || pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (React.createElement(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest }, children));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n        data?.label,\n        React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (React.createElement(React.Fragment, null,\n    data?.label,\n    React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (React.createElement(React.Fragment, null,\n    React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n    data?.label));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected).map((e) => ({ ...e })),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return React.createElement(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, nodeDragThreshold, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (React.createElement(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle }, ariaLiveMessage));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style },\n            \"Press enter or space to select a node.\",\n            !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.',\n            \" Press delete to remove it and escape to cancel.\",\n            ' '),\n        React.createElement(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"),\n        !disableKeyboardA11y && React.createElement(AriaLiveMessage, { rfId: rfId })));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { actInsideInputWithModifier: true }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const doc = typeof document !== 'undefined' ? document : null;\n        const target = options?.target || doc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    const parentId = node.parentNode || node.parentId;\n    if (!parentId) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(parentId);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        const parentId = node.parentNode || node.parentId;\n        if (parentId && !nodeInternals.has(parentId)) {\n            throw new Error(`Parent node ${parentId} not found`);\n        }\n        if (parentId || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        const parentId = node.parentNode || node.parentId;\n        if (parentId) {\n            parentNodes[parentId] = true;\n        }\n        const resetHandleBounds = currInternals?.type && currInternals?.type !== node.type;\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: resetHandleBounds ? undefined : currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getNodesBounds(nodes, nodeOrigin);\n            const { x, y, zoom } = getViewportForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    screenToFlowPosition: (position) => position,\n    flowToScreenPosition: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                // @deprecated Use `screenToFlowPosition`.\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                screenToFlowPosition: (position) => {\n                    const { transform, snapToGrid, snapGrid, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const relativePosition = {\n                        x: position.x - domX,\n                        y: position.y - domY,\n                    };\n                    return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n                },\n                flowToScreenPosition: (position) => {\n                    const { transform, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const rendererPosition = rendererPointToPoint(position, transform);\n                    return {\n                        x: rendererPosition.x + domX,\n                        y: rendererPosition.y + domY,\n                    };\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentId = node.parentNode || node.parentId;\n            const parentHit = !nodeIds.includes(node.id) && parentId && res.find((n) => n.id === parentId);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        if (!isRect && !node) {\n            return [null, null, isRect];\n        }\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    // macos and win set ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    // we still want to enable pinch zooming even if preventScrolling is set to false\n                    const invalidEvent = !preventScrolling && event.type === 'wheel' && !event.ctrlKey;\n                    if (invalidEvent || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if ((panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(1))) &&\n                    event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) &&\n                    (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (React.createElement(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle }, children));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parentId = updateItem.parentNode || updateItem.parentId;\n    const parent = res.find((e) => e.id === parentId);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (React.createElement(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle },\n        children,\n        React.createElement(UserSelection, null)));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    const parentId = node.parentNode || node.parentId;\n    if (!parentId) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(parentId);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || n.parentId || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode || n.parentId,\n        parentId: n.parentNode || n.parentId,\n        width: n.width,\n        height: n.height,\n        expandParent: n.expandParent,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    const parentId = node.parentNode || node.parentId;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (parentId && node.width && node.height) {\n            const parent = nodeInternals.get(parentId);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && parentId && node.extent !== 'parent') {\n        const parent = nodeInternals.get(parentId);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (parentId) {\n        const parentNode = nodeInternals.get(parentId);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const dragStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getNodesBounds(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            const startDrag = (event) => {\n                const { nodeInternals, multiSelectionActive, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                dragStarted.current = true;\n                const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                    if (!nodeInternals.get(nodeId)?.selected) {\n                        // we need to reset selected nodes when selectNodesOnDrag=false\n                        unselectNodesAndEdges();\n                    }\n                }\n                if (nodeId && isSelectable && selectNodesOnDrag) {\n                    handleNodeClick({\n                        id: nodeId,\n                        store,\n                        nodeRef: nodeRef,\n                    });\n                }\n                const pointerPos = getPointerPosition(event);\n                lastPos.current = pointerPos;\n                dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                if (onStart && dragItems.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onStart(event.sourceEvent, currentNode, nodes);\n                }\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { domNode, nodeDragThreshold } = store.getState();\n                    if (nodeDragThreshold === 0) {\n                        startDrag(event);\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag, nodeDragThreshold } = store.getState();\n                    if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    if (!dragStarted.current) {\n                        const x = pointerPos.xSnapped - (lastPos?.current?.x ?? 0);\n                        const y = pointerPos.ySnapped - (lastPos?.current?.y ?? 0);\n                        const distance = Math.sqrt(x * x + y * y);\n                        if (distance > nodeDragThreshold) {\n                            startDrag(event);\n                        }\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current &&\n                        dragStarted.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    if (!dragStarted.current) {\n                        return;\n                    }\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    dragStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, hasHandleBounds, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevNodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            const { nodeDragThreshold } = store.getState();\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (disableKeyboardA11y) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            return () => {\n                if (prevNodeRef.current) {\n                    resizeObserver?.unobserve(prevNodeRef.current);\n                    prevNodeRef.current = null;\n                }\n            };\n        }, []);\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                if (!initialized || !hasHandleBounds || prevNodeRef.current !== currNode) {\n                    // At this point we always want to make sure that the node gets re-measured / re-initialized.\n                    // We need to unobserve it first in case it is still observed\n                    if (prevNodeRef.current) {\n                        resizeObserver?.unobserve(prevNodeRef.current);\n                    }\n                    resizeObserver?.observe(currNode);\n                    prevNodeRef.current = currNode;\n                }\n            }\n        }, [hidden, initialized, hasHandleBounds]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel },\n            React.createElement(Provider, { value: id },\n                React.createElement(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }))));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getNodesBounds(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (React.createElement(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        } },\n        React.createElement(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } })));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (React.createElement(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName },\n        React.createElement(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode },\n            children,\n            nodesSelectionActive && (React.createElement(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y })))));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (React.createElement(\"div\", { className: \"react-flow__nodes\", style: containerStyle }, nodes.map((node) => {\n        let nodeType = node.type || 'default';\n        if (!props.nodeTypes[nodeType]) {\n            onError?.('003', errorMessages['error003'](nodeType));\n            nodeType = 'default';\n        }\n        const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n        const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n        const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n        const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n        const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n        const clampedPosition = props.nodeExtent\n            ? clampPosition(node.positionAbsolute, props.nodeExtent)\n            : node.positionAbsolute;\n        const posX = clampedPosition?.x ?? 0;\n        const posY = clampedPosition?.y ?? 0;\n        const posOrigin = getPositionWithOrigin({\n            x: posX,\n            y: posY,\n            width: node.width ?? 0,\n            height: node.height ?? 0,\n            origin: props.nodeOrigin,\n        });\n        return (React.createElement(NodeComponent, { key: node.id, id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel, hasHandleBounds: !!node[internalsSymbol]?.handleBounds }));\n    })));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (React.createElement(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, disableKeyboardA11y, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url('#${getMarkerId(markerStart, rfId)}')`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url('#${getMarkerId(markerEnd, rfId)}')`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n            const edge = edges.find((e) => e.id === id);\n            if (!edge) {\n                return;\n            }\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                if (edge.selected && multiSelectionActive) {\n                    unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                    edgeRef.current?.blur();\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n            if (onClick) {\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (!disableKeyboardA11y && elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (React.createElement(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef },\n            !updating && (React.createElement(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })),\n            isUpdatable && (React.createElement(React.Fragment, null,\n                (isUpdatable === 'source' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })),\n                (isUpdatable === 'target' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))))));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (React.createElement(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\" },\n        React.createElement(Symbol, { color: color, strokeWidth: strokeWidth })));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (React.createElement(\"defs\", null, markers.map((marker) => (React.createElement(Marker, { id: marker.id, key: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient })))));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, disableKeyboardA11y, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        edgeTree.map(({ level, edges, isMaxLevel }) => (React.createElement(\"svg\", { key: level, style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\" },\n            isMaxLevel && React.createElement(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }),\n            React.createElement(\"g\", null, edges.map((edge) => {\n                const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                if (!sourceIsValid || !targetIsValid) {\n                    return null;\n                }\n                let edgeType = edge.type || 'default';\n                if (!edgeTypes[edgeType]) {\n                    onError?.('011', errorMessages['error011'](edgeType));\n                    edgeType = 'default';\n                }\n                const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                // when connection type is loose we can define all handles as sources and connect source -> source\n                const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                    ? targetHandleBounds.target\n                    : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                const sourcePosition = sourceHandle?.position || Position.Bottom;\n                const targetPosition = targetHandle?.position || Position.Top;\n                const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                    (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                if (!sourceHandle || !targetHandle) {\n                    onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                    return null;\n                }\n                const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                return (React.createElement(EdgeComponent, { key: edge.id, id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth, disableKeyboardA11y: disableKeyboardA11y }));\n            }))))),\n        children));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (React.createElement(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform } }, children));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (React.createElement(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return React.createElement(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (React.createElement(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\" },\n        React.createElement(\"g\", { className: cc(['react-flow__connection', connectionStatus]) },\n            React.createElement(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }))));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (React.createElement(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y },\n        React.createElement(Viewport, null,\n            React.createElement(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId },\n                React.createElement(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle })),\n            React.createElement(\"div\", { className: \"react-flow__edgelabel-renderer\" }),\n            React.createElement(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId }))));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    nodeDragThreshold: 0,\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    onSelectionChange: [],\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node?.hidden) {\n                nodeInternals.set(node.id, {\n                    ...node,\n                    [internalsSymbol]: {\n                        ...node[internalsSymbol],\n                        // we need to reset the handle bounds when the node is hidden\n                        // in order to force a new observation when the node is shown again\n                        handleBounds: undefined,\n                    },\n                });\n            }\n            else if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return React.createElement(Provider$1, { value: storeRef.current }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, nodeDragThreshold, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (React.createElement(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id },\n        React.createElement(Wrapper, null,\n            React.createElement(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }),\n            React.createElement(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, nodeDragThreshold: nodeDragThreshold }),\n            React.createElement(Wrapper$1, { onSelectionChange: onSelectionChange }),\n            children,\n            React.createElement(Attribution, { proOptions: proOptions, position: attributionPosition }),\n            React.createElement(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y }))));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n        store.setState({ onSelectionChange: nextSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChange.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChange: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"names":["StoreContext","createContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","useContext","Error","useStoreApi","useMemo","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText$1","memo","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","useRef","edgeTextBbox","setEdgeTextBbox","useState","width","height","edgeTextClasses","useEffect","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","isInputDOMNode","event","kbEvent","isReactKeyboardEvent","nativeEvent","composedPath","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","navigator","userAgent","indexOf","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMouseHandler$1","handler","undefined","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","centerY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","offsetX","offsetY","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getSmoothStepPath","borderRadius","offset","points","center","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceGapPoint","targetGapPoint","getPoints","reduce","res","p","i","segment","length","c","size","bendSize","xDir","getBend","SmoothStepEdge","pathOptions","StepEdge","props","StraightEdge","getStraightPath","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","getEdgeId","getMarkerId","marker","rfId","Object","keys","sort","map","key","join","pointToRendererPoint","tx","ty","tScale","snapToGrid","snapX","snapY","round","rendererPointToPoint","getNodePositionWithOrigin","nodeOrigin","getNodesBounds","nodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","dragging","push","getConnectedEdges","nodeIds","filter","getViewportForBounds","minZoom","maxZoom","padding","xZoom","yZoom","zoom","clampedZoom","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","nodeId","nullConnection","defaultResult","handleDomNode","isValid","connection","endHandle","isValidHandle","handle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleToCheck","querySelector","result","handleType","getHandleType","handleNodeId","getAttribute","handleId","connectable","classList","contains","connectableEnd","Strict","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","connectionRadius","onConnectStart","panBy","getNodes","cancelConnection","closestHandle","autoPanId","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","sourceHandles","targetHandles","getHandleLookup","autoPan","xMovement","yMovement","requestAnimationFrame","onPointerMove","validHandleResult","handles","validator","handleBelow","elementsFromPoint","el","closestHandles","minDistance","hasValidHandle","some","hasTargetHandle","getClosestHandle","connectionEndHandle","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","Handle","forwardRef","isConnectable","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","connecting","clickConnecting","state","startHandle","connectionClickStartHandle","clickHandle","connectingSelector","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","edgeParams","setEdges","connectionExists","concat","addEdge","onPointerDown","button","connectablestart","connectableend","connectionindicator","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","fn","changeSelector","Wrapper$1","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","nodeDragThreshold","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","useKeyPress","keyCode","options","actInsideInputWithModifier","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","parentId","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","zIndex","currInternals","internals","resetHandleBounds","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","isVisible","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","screenToFlowPosition","flowToScreenPosition","viewportInitialized","selector$b","useViewportHelper","scaleBy","zoomLevel","scaleTo","nextZoom","console","warn","domX","domY","relativePosition","rendererPosition","useReactFlow","viewportHelper","useCallback","getNode","getEdges","getEdge","payload","nextNodes","nextEdges","addNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","area","deleteKeyOptions","containerStyle","eventToFlowTransform","eventTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","rendererNode","resizeObserver","updateDimensions","ResizeObserver","observe","unobserve","useResizeHandler","bbox","d3ZoomInstance","scaleExtent","call","updatedTransform","constrainedTransform","constrain","on","this","passive","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","sourceEvent","flowTransform","paneDragging","prevViewport","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","handleParentExpand","updateItem","parent","extendWidth","extendHeight","xDiff","yDiff","applyChanges","changes","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","nodesSelectionActive","onWheel","hasActiveSelection","onContextMenu","onMouseEnter","startX","startY","onMouseMove","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","isParentSelected","hasSelector","nodeRef","matches","parentElement","getDragItems","from","values","draggable","delta","calcNextPosition","nextPosition","clampedNodeExtent","clampNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","unselect","addSelectedNodes","unselectNodesAndEdges","multiSelectionActive","blur","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","dragStarted","getPointerPosition","pointerPos","xSnapped","ySnapped","useGetPointerPosition","updateNodes","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","updatedPos","onDrag","currentNode","startDrag","onStart","dragHandler","onStop","useUpdateNodePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isDraggable","isFocusable","dragHandle","initialized","ariaLabel","hasHandleBounds","prevNodeRef","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","updatePositions","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","tabIndex","role","selector$7","transformString","NodesSelection$1","onSelectionContextMenu","focus","preventScroll","selector$6","FlowRenderer","deleteKeyCode","selectionKeyCode","selectionOnDrag","multiSelectionKeyCode","panActivationKeyCode","_panOnScroll","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","deleteKeyPressed","multiSelectionKeyPressed","useGlobalKeyHandler","FlowRenderer$1","createNodeTypes","nodeTypes","input","default","output","group","selector$5","NodeRenderer","onlyRenderVisible","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","origin","getPositionWithOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","evt","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","addSelectedEdges","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getNodeData","defaultEdgeTree","level","isMaxLevel","useVisibleEdges","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","groupEdgesByZLevel","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","isEdgeVisible","MarkerSymbols","Arrow","color","strokeLinecap","strokeLinejoin","ArrowClosed","Marker","markerUnits","orient","useMarkerSymbol","markerWidth","markerHeight","refX","refY","MarkerDefinitions","defaultColor","markers","ids","markerId","localeCompare","markerSelector","m","MarkerDefinitions$1","selector$4","EdgeRenderer","defaultMarkerColor","onEdgeClick","sourceNodeRect","sourceHandleBounds","sourceIsValid","targetNodeRect","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","sourceHandlePos","targetHandlePos","getEdgePositions","EdgeRenderer$1","selector$3","Viewport","oppositePosition","ConnectionLine","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","GraphView","onInit","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","rfInstance","isInitialized","useOnInitHandler","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","ReactFlowProvider","storeRef","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","edgesToUnselect","is","Wrapper","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","createUseItemsState","initialItems","setItems","onItemsChange"],"sourceRoot":""}