{"version":3,"file":"component---src-pages-myth-mdx-3e8ae5c2e3d4f23e30dc.js","mappings":"0JAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,GAAI,KAAM,iBAAkB,KAAM,KAAMG,EAAAA,cAAoBC,EAAAA,EAAK,CAChJC,MAAOC,EAAAA,gBACPC,MAAOC,EAAAA,kBAEX,CAKA,UAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOQ,EAAYP,EAAAA,cAAoBO,EAAWd,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,C,8ECjBA,MACMe,EAAW,OACXC,GAAW,EACXC,EAAO,SAEAC,EAAuB,CAClC,CACEC,GAAI,SACJC,KAAM,CAAEC,MAAO,QACfJ,KAAMF,GAER,CACEI,GAAI,SACJC,KAAM,CAAEC,MAAO,UACfJ,KAAMF,GAER,CACEI,GAAI,SACJC,KAAM,CAAEC,MAAO,aACfJ,KAAMF,GAER,CACEI,GAAI,SACJC,KAAM,CAAEC,MAAO,QACfJ,KAAMF,GAER,CACEI,GAAI,SACJC,KAAM,CAAEC,MAAO,UACfJ,KAAMF,GAER,CACEI,GAAI,SACJC,KAAM,CAAEC,MAAO,OACfJ,KAAMF,IAIGO,EAAuB,CAClC,CACEH,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,YAEF,CACEG,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,YAEF,CACEG,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,YAEF,CACEG,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,YAEF,CACEG,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,YAEF,CACEG,GAAI,eACJI,OAAQ,QACRC,OAAQ,SACRP,OACAD,Y,4FCpDJ,MAAMS,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBrB,GAC/B,MAAMsB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfpB,EACFA,EAAWsB,GAGb,IAAIA,KAAsBtB,EACnC,GACA,CAACsB,EAAmBtB,GAExB,CAWO,SAASuB,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWxB,WACdwB,EAAWxB,WAAWmB,GACtBK,EAAWxB,YAAcmB,EAEfE,EAAiBG,EAAWxB,YAGvC,gBACLoB,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWK,SAEf,C","sources":["webpack://odyssey/./src/pages/myth.mdx","webpack://odyssey/./src/content/data/gaia-uranus-girls.ts","webpack://odyssey/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {gaiaUranusNodes, gaiaUranusEdges} from \"../content/data/gaia-uranus-girls\";\nimport {Map} from \"../feature/Map\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Hello, world!\"), \"\\n\", \"\\n\", React.createElement(Map, {\n    nodes: gaiaUranusNodes,\n    edges: gaiaUranusEdges\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","const labelNode = \"label\";\nconst baseNode = \"base\";\nconst animated = true;\nconst type = \"bezier\";\n\nexport const gaiaUranusGirlsNodes = [\n  {\n    id: \"hgupt1\",\n    data: { label: \"Тейя\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupf1\",\n    data: { label: \"Фемида\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupm1\",\n    data: { label: \"Мнемосина\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupf2\",\n    data: { label: \"Феба\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupt2\",\n    data: { label: \"Тефида\" },\n    type: baseNode,\n  },\n  {\n    id: \"hgupr1\",\n    data: { label: \"Рея\" },\n    type: baseNode,\n  },\n];\n\nexport const gaiaUranusGirlsEdges = [\n  {\n    id: \"hgup1-hgupt1\",\n    source: \"hgup1\",\n    target: \"hgupt1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupf1\",\n    source: \"hgup1\",\n    target: \"hgupf1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupm1\",\n    source: \"hgup1\",\n    target: \"hgupm1\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupf2\",\n    source: \"hgup1\",\n    target: \"hgupf2\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupt2\",\n    source: \"hgup1\",\n    target: \"hgupt2\",\n    type,\n    animated,\n  },\n  {\n    id: \"hgup1-hgupr1\",\n    source: \"hgup1\",\n    target: \"hgupr1\",\n    type,\n    animated,\n  },\n];\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","_provideComponents","components","React","Map","nodes","gaiaUranusNodes","edges","gaiaUranusEdges","wrapper","MDXLayout","baseNode","animated","type","gaiaUranusGirlsNodes","id","data","label","gaiaUranusGirlsEdges","source","target","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value","children"],"sourceRoot":""}